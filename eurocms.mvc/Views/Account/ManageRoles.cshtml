<div class="tabbable tabbable-custom">
    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#tab_1_1">Existing Roles</a></li>
        <li class=""><a data-toggle="tab" href="#tab_1_2">Create New Role</a></li>

    </ul>
    <div class="tab-content">
        <div id="tab_1_1" class="tab-pane active">
            <div class="no-more-tables">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Role Name</th>
                            <th>Description</th>
                            <th>Users</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var role in Roles.GetAllRoles())
                        {
                            <tr>
                                <td data-title="Role Name">@role</td>
                                <td data-title="Description">No Description</td>
                                <td data-title="Users">
                                    @foreach (var item in Roles.GetUsersInRole(role).ToList())
                                    {
                                        <span>@Html.ActionLink(item, "Details", new { id = item }), </span>
                                    }
                                </td>
                                <td data-title="Actions">
                                    @if (!role.Equals("Administrator")
                                            && !role.Equals("PowerUser")
                                            && !role.Equals("Editor")
                                            && !role.Equals("Author")
                                            && !role.Equals("ContentManager")
                                            && !role.Equals("ContentEntry")
                                            && !role.Equals("UserCreator"))
                                    {
                                        using (Html.BeginForm("DeleteRole", "Account", FormMethod.Post))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="name" value="@role" />
                                            <button class="btn mini red" type="submit"><i class="icon-trash"></i> Delete</button>
                                        }
                                    }
                                    else
                                    {
                                        @:System Role
									}
                                </td>

                                <td data-title="Actions">
                                    <a class="btn mini blue tooltips" data-placement="top" data-original-title="View Users in This Role" href="@Url.Action("Index", "Account", new { role = role})" title="View Users in This Role"><i class="icon-user"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div id="tab_1_2" class="tab-pane">
            @using (Html.BeginForm("SaveRole", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
            {
            @Html.AntiForgeryToken()
            <div class="row-fluid">
                <p>
                    You can optionally add roles, or groups, that enable you to allow or deny groups of users access to specific folders in your Web site.<br />
                    For example, you might create roles such as "managers," "sales," or "members," each with different access to specific folders.
                </p>
                <div class="control-group">
                    <label class="control-label" for="name">Role Name: </label>
                    <div class="controls">
                        @Html.TextBox("name", "", new { @class = "required" })
                        @Html.ValidationMessage("name")
                    </div>
                </div>
            </div>
            <div class="form-actions">
                <button class="btn green" type="submit"><i class="icon-save"></i> Save</button>
            </div>
            }
        </div>

    </div>
</div>



