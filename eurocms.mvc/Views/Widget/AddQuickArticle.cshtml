@model List<EuroCMS.Model.WidgetConfig>



@{
    EuroCMS.Model.CmsDbContext dbContext = new EuroCMS.Model.CmsDbContext();
    List<EuroCMS.Model.Zone> zones = dbContext.Zones.Where(x => x.Status == "A").ToList();
    List<EuroCMS.Model.Classification> clsfs = dbContext.Classifications.ToList();
    List<EuroCMS.Model.Language> languages = dbContext.Languages.ToList();

    @*<input id="hdnWidgetUserId" name="WidgetUserId" type="hidden" value=@Model.FirstOrDefault().WidgetUserID.ToString() />*@
    if (Model != null && Model.Count > 0)
    {
        @Html.HiddenFor(x => x[0].WidgetUserID)
        <input type="hidden" name="zones[]" value=@Model.Where(x => x.ParamKey == "Zones").FirstOrDefault().ParamValue />
        <input type="hidden" name="lang_id" value=@Model.Where(x => x.ParamKey == "LanguageID").FirstOrDefault().ParamValue />
        <input type="hidden" name="clsf_id" value=@(Model.Where(x => x.ParamKey == "ClassificationID").FirstOrDefault().ParamValue.Trim() == "" ? "0" : Model.Where(x => x.ParamKey == "ClassificationID").FirstOrDefault().ParamValue) />
        <input type="hidden" name="status" value="1" />
    }
    <input id="WidgetType" name="WidgetType" type="hidden" value="QuickArticle" />
    <div class="widgetScreen" @(Model == null ? "style=display:none;" : "")>
        @if (Model != null && Model.Count > 0)
        {
            <div class="row-fluid">
                <div class="control-group">
                    <!-- headline -->
                    <label class="control-label" for="headline">Zone : </label>
                    <div class="controls">
                        @{
            string zoneId = string.Empty;
            if (Model != null && Model.Count > 0)
            {
                zoneId = Model.Where(x => x.ParamKey == "Zones").FirstOrDefault().ParamValue;
            }
            try
            {
                if (zoneId.Contains(","))
                {
                    string[] zoneIds = zoneId.Split(',');
                    string allZones = string.Empty;
                    foreach (string s in zoneIds)
                    {
                        allZones += zones.Where(x => x.Id == Convert.ToInt32(s)).FirstOrDefault().Name;
                        allZones += ",";
                    }
                    if (allZones.EndsWith(","))
                    {
                        allZones = allZones.Substring(0, allZones.Length - 1);
                    }
                    <span>@allZones</span>
                }
                else
                {
                    <span> @zones.Where(x => x.Id == Convert.ToInt32(zoneId)).FirstOrDefault().Name</span>
                }


            }
            catch (Exception ex)
            {
                EuroCMS.Core.CmsHelper.SaveErrorLog(ex, "Zone not found", true);
            }
                        }
                    </div>
                    <!-- //headline -->
                </div>
            </div>
            string clsId = string.Empty;
            clsId = Model.Where(x => x.ParamKey == "ClassificationID").FirstOrDefault().ParamValue;
            if (Model != null && Model.Count > 0)
            {
                if (!string.IsNullOrEmpty(clsId))
                {
                    <div class="row-fluid">
                        <div class="control-group">
                            <!-- headline -->
                            <label class="control-label" for="headline">Classification : </label>
                            <div class="controls">
                                @{
                    if (Model != null && Model.Count > 0)
                    {
                        if (!string.IsNullOrEmpty(clsId))
                        {
                            string classificationName = clsfs.Where(x => x.ID == Convert.ToInt32(clsId)).FirstOrDefault().Name;
                            <span>@classificationName</span>
                        }
                    }
                                }
                            </div>
                            <!-- //headline -->
                        </div>
                    </div>
                }
            }

            <div class="row-fluid">
                <div class="control-group">
                    <!-- headline -->
                    <label class="control-label" for="headline">Language : </label>
                    <div class="controls">
                        @{
            string lid = Model.Where(x => x.ParamKey == "LanguageID").FirstOrDefault().ParamValue;
            EuroCMS.Model.Language l = languages.Where(x => x.ID.ToString() == lid).FirstOrDefault();
                        }
                        <span>@(l != null ? HttpUtility.HtmlDecode(l.Name) : string.Empty)</span>
                    </div>
                    <!-- //headline -->
                </div>
            </div>
            <div class="row-fluid">
                <div class="control-group">
                    <!-- headline -->
                    <label class="control-label" for="headline">Headline:</label>
                    <div class="controls">
                        <input class="m-wrap span12" type="text" name="headline" id="headline" value="" />
                    </div>
                    <!-- //headline -->
                </div>
            </div>
            <div class="row-fluid">
                <div class="control-group">
                    <!-- summary -->
                    <label class="control-label" for="summary">Summary</label>
                    <div class="controls">
                        <textarea class="m-wrap span12" rows="4" name="summary" id="summary"></textarea>
                    </div>
                    <!-- // summary -->
                </div>
            </div>
            if (!string.IsNullOrEmpty(clsId) && Convert.ToInt32(clsId) > 0)
            {
                <div class="row-fluid">
                    @Html.Partial("CustomValues", new EuroCMS.Admin.entity.cms_article_revision { clsf_id = Convert.ToInt32(clsId) })
                </div>
            }
            <div class="row-fluid">
                <div class="control-group">
                    <!-- summary -->
                    <label class="control-label" for="summary">Container #1</label>
                </div>
                <div class="control-group" id="editor">
                    <div class="controls">
                        <div class="type_H">
                            <!-- article 1 -->
                            <textarea class="htmlEditor span12" id="article_1" name="article_1"></textarea>
                            <!-- article 1 -->
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="form-actions">
            <ul class="newFormActions">
                <li><button type="submit" class="btn green" title="Save This Article" onclick="selectionObj();"><i class="icon-save"></i> Save </button></li>

                @if (User.IsInRole("Administrator") || User.IsInRole("PowerUser") || User.IsInRole("Editor") || User.IsInRole("User"))
                {
                    //if (Model.rev_id > 0 && Model.revision_status.Equals("N"))
                    //{
                    <li>
                        @*<input type="hidden" name="forceapprove" value="true" />*@
                        <button onclick="selAllRelArt(this)" type="submit" name="forceapprove" value="true" class="btn green"><i class="icon-save"></i> Save & Approve </button>
                    </li>
                    //}
                }
            </ul>
        </div>

    </div>

}