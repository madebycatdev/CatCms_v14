@model List<EuroCMS.Model.WidgetConfig>
@{
    EuroCMS.Model.CmsDbContext dbContext = new EuroCMS.Model.CmsDbContext();
    List<EuroCMS.Model.vAspNetMembershipUser> users = dbContext.vAspNetMembershipUsers.ToList();

    if (Model != null && Model.Count > 0)
    {
        @Html.HiddenFor(x => x[0].WidgetUserID)
        <input type="hidden" name="userId" value=@Model.Where(x => x.ParamKey == "Users").FirstOrDefault().ParamValue />
        <input type="hidden" name="days" value=@Model.Where(x => x.ParamKey == "ActivityDays").FirstOrDefault().ParamValue />
    }
    <input id="WidgetType" name="WidgetType" type="hidden" value="Activities" />

    <div class="row-fluid">
        <div class="control-group">
            <label class="control-label" for="zones">Users:</label>
            <div class="controls">
                <div id="newZones">
                    <select class="chosen-select" onclick="onZoneChanged(this);" data-placeholder="Select a User" name="users" id=" users" multiple>
                        <option value="all" @(Model.Where(x => x.ParamKey == "Users").FirstOrDefault().ParamValue != null && Model.Where(x => x.ParamKey == "Users").FirstOrDefault().ParamValue.ToLower().Contains("all") ? "selected=selected" : "")>All</option>
                        @if (users != null)
                        {
                            for (int i = 0; i < users.Count; i++)
                            {
                                var userProfile = System.Web.Profile.ProfileBase.Create(users[i].UserName, false);
                                string userFullName = userProfile.GetPropertyValue("System.FullName").ToString().Trim();
                                <option value="@users[i].UserName" @(Model.Where(x => x.ParamKey == "Users").FirstOrDefault().ParamValue != null && Model.Where(x => x.ParamKey == "Users").FirstOrDefault().ParamValue.ToLower().Contains(@users[i].UserName) ? "selected=selected" : "")>@userFullName</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="control-group">
            <!-- // Article Type -->
            <label class="control-label" for="article_type">Activities of:</label>
            <div class="controls">
                <select class="m-wrap span12" onchange="onArticleTypeChanged(this);" id="article_type" name="article_type">
                    <option value="0" @(Model.Where(x => x.ParamKey == "ActivityDays").FirstOrDefault().ParamValue == "0" ? "selected=selected" : "")>All</option>
                    <option value="1" @(Model.Where(x => x.ParamKey == "ActivityDays").FirstOrDefault().ParamValue == "1" ? "selected=selected" : "")> Today</option>
                    <option value="2" @(Model.Where(x => x.ParamKey == "ActivityDays").FirstOrDefault().ParamValue == "2" ? "selected=selected" : "")>This Week</option>
                    <option value="3" @(Model.Where(x => x.ParamKey == "ActivityDays").FirstOrDefault().ParamValue == "3" ? "selected=selected" : "")>This Month</option>
                    <option value="4" @(Model.Where(x => x.ParamKey == "ActivityDays").FirstOrDefault().ParamValue == "4" ? "selected=selected" : "")>This Year</option>
                </select>
            </div>
            <!-- // Article Type -->
        </div>
    </div>
}
<div class="form-actions">
    <button type="button" onclick="ConfigSaved(this)" class="btn green" title="Save This Configs"><i class="icon-save"></i> Save</button>
</div>
<script>
    $(document).ready(function () {
        $('#dvPanelTitle@((Model == null || Model.Count == 0) ? "" : Model.FirstOrDefault().WidgetUserID.ToString())').html('<i class="icon-reorder"></i>Last Activities');
    });
</script>
