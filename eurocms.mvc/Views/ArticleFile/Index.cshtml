@model List<EuroCMS.Admin.entity.cms_article_files_revision_files>

@*
<p>
    <a href="@Url.Action("Create", new {
           @ArticleId = ViewBag.ArticleId,
           @RevisionId = ViewBag.RevisionId,
           @FileRevisionId = ViewBag.FileRevisionId })" class="btn blue">Add New File <i class="icon-plus"></i></a>
</p>

<p><a class="btn mini blue" href="#" onclick="openAcc('Revision History')">Revision History <i class=" icon-arrow-down"></i></a></p>
*@

<div class="row-fluid">
	<div class="span10 no-left-margin margin-bottom-10">
		<a href="@Url.Action("Create", new {
           @ArticleId = ViewBag.ArticleId,
           @RevisionId = ViewBag.RevisionId,
           @FileRevisionId = ViewBag.FileRevisionId })" class="btn blue">Add New File <i class="icon-plus"></i></a>
	</div>
	<div class="span2">
		<a class="btn mini" href="#" onclick="openAcc('Revision History')">Revision History <i class=" icon-arrow-down"></i></a>
	</div>
</div>


@Html.Partial("ArticleFileRevisionList", ViewData["article_file_revisions"] as List<EuroCMS.Admin.entity.cms_asp_admin_select_article_files_revision_list_Result>)


<!-- BEGIN SAMPLE TABLE PORTLET-->
<div class="no-more-tables">
	<table class="table table-striped table-hover aFilesIndexList">
		<thead>
			<tr>
				<th>#</th>
				<th>File(s)</th>
				<th>Type</th>
				<th width="200">Title</th>
				<th>Comment</th>
				<th>Order</th>
				<th width="97">Actions</th>
			</tr>
		</thead>
		<tbody>

			@if (Model != null)
			{
				int i = 1;
				int rev_idm = 0;
				int article_idm = 0;
				
				if (Model.Count > 0)
				{
					//int i = 1;
					//int rev_idm = 0;
					//int article_idm = 0;
					foreach (var articleFile in Model)
					{

						if (i == 1)
						{
							rev_idm = Convert.ToInt32(articleFile.rev_id);
							article_idm = articleFile.article_id;
						}
						var file_name_1 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_1;
						var file_name_2 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_2;
						var file_name_3 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_3;
						var file_name_4 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_4;
						var file_name_5 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_5;
						var file_name_6 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_6;
						var file_name_7 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_7;
						var file_name_8 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_8;
						var file_name_9 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_9;
						var file_name_10 = articleFile.rev_id + "/" + articleFile.article_id + "_" + articleFile.file_name_10;
						<tr>

							<td data-title="#">@i.</td>
							<td data-title="File(s)">
								
								<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_1" target="_blank"><img width="75" src ="/i/tmp/@file_name_1" alt="i/tmp/@articleFile.file_name_1" /></a>
								@if (!string.IsNullOrEmpty(articleFile.file_name_2))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_2" target="_blank"><img width="75" src ="/i/tmp/@file_name_2" alt="i/tmp/@articleFile.file_name_2" /></a>
								}
								@if (!string.IsNullOrEmpty(articleFile.file_name_3))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_3" target="_blank"><img width="75" src ="/i/tmp/@file_name_3" alt="i/tmp/@articleFile.file_name_3" /></a>
								}
								@if (!string.IsNullOrEmpty(articleFile.file_name_4))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_4" target="_blank"><img width="75" src ="/i/tmp/@file_name_4" alt="i/tmp/@articleFile.file_name_4" /></a>
								}
								@if (!string.IsNullOrEmpty(articleFile.file_name_5))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_5" target="_blank"><img width="75" src ="/i/tmp/@file_name_5" alt="i/tmp/@articleFile.file_name_5" /></a>
								}
								@if (!string.IsNullOrEmpty(articleFile.file_name_6))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_6" target="_blank"><img width="75" src ="/i/tmp/@file_name_6" alt="i/tmp/@articleFile.file_name_6" /></a>
								}
								@if (!string.IsNullOrEmpty(articleFile.file_name_7))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_7" target="_blank"><img width="75" src ="/i/tmp/@file_name_7" alt="i/tmp/@articleFile.file_name_7" /></a>
								}
								@if (!string.IsNullOrEmpty(articleFile.file_name_8))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_8" target="_blank"><img width="75" src ="/i/tmp/@file_name_8" alt="i/tmp/@articleFile.file_name_8" /></a>
								}
								@if (!string.IsNullOrEmpty(articleFile.file_name_9))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_9" target="_blank"><img width="75" src ="/i/tmp/@file_name_9" alt="i/tmp/@articleFile.file_name_9" /></a>
								}
								@if (!string.IsNullOrEmpty(articleFile.file_name_10))
								{ 	<br /> 
									<a class="margin-bottom-10 popovers" href="/i/tmp/@file_name_10" target="_blank"><img width="75" src ="/i/tmp/@file_name_10" alt="i/tmp/@articleFile.file_name_10" /></a>
								}
								
	
							</td>
							<td data-title="Type">@articleFile.type_name</td>
						
							<td data-title="Title">@articleFile.file_title</td>
							<td data-title="Comment">@articleFile.file_comment</td>
							<td data-title="Order">@articleFile.file_order</td>
							<td data-title="Actions">
								<a href="@Url.Action("Edit",new { @ArticleId = Request.QueryString["ArticleId"], @RevisionId = Request.QueryString["RevisionId"], @FileRevisionId = ViewBag.FileRevisionId , @id = @articleFile.af_rf_id , @TypeID =  @articleFile.file_type_id ,@RevisionStatus=ViewBag.revision_status})" class="btn icn-only" title="Edit File"><i class="icon-pencil"></i></a>
								@using (Html.BeginForm("Delete", "ArticleFile", new { @RevisionId = Request.QueryString["RevisionId"], @FileRevisionId = @articleFile.rev_id, @ArticleId = Request.QueryString["ArticleId"], @FileId = @articleFile.af_rf_id, @RevisionStatus = ViewBag.RevisionStatus }))
								{
									@Html.AntiForgeryToken()
									<button type="submit" class="btn icn-only red" title="Delete File" data-message="Are you sure want to delete this file?" onclick="return deleteObject(this);"><i class="icon-trash"></i></button>
								}
							</td>
						</tr>
								i++;
					}
					<tr>
						<td colspan="8">
							@*@using (Html.BeginForm("Approve", "ArticleFile", new { ArticleId = @article_idm, RevisionId = Request.QueryString["RevisionId"], FileRevisionId = @rev_idm }))
							{
								@Html.AntiForgeryToken()
								<button type="submit" class="btn icn-only green margin-bottom-5" title="Approve This Revision"><i class="icon-flag"></i></button>
							}
							@using (Html.BeginForm("Discard", "ArticleFile", new { ArticleId = @article_idm, RevisionId = Request.QueryString["RevisionId"], FileRevisionId = @rev_idm }))
							{
								@Html.AntiForgeryToken()
								<button type="submit" class="btn icn-only margin-bottom-5" title="Discard This Revision"><i class="icon-remove"></i></button>
							}*@

                            @if (User.IsInRole("Administrator") || User.IsInRole("PowerUser") || User.IsInRole("Editor") || User.IsInRole("User"))
                            {
                                if (ViewBag.FileRevisionId > 0 && ViewBag.RevisionStatus == "N")
                                {
                                    using (Html.BeginForm("Approve", "ArticleFile", new { ArticleId = @article_idm, RevisionId = Request.QueryString["RevisionId"], FileRevisionId = @rev_idm }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn icn-only red" title="Approve This Revision"><i class="icon-flag"></i></button>
                                    }
                                    using (Html.BeginForm("Discard", "ArticleFile", new { ArticleId = @article_idm, RevisionId = Request.QueryString["RevisionId"], FileRevisionId = @rev_idm }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn icn-only red" title="Discard This Revision"><i class="icon-remove"></i></button>
                                    }
                                }
                            }
                            else
                            {
                                if (ViewBag.FileRevisionId > 0 && ViewBag.RevisionStatus == "N")
                                {
                                 <!-- Send To Approve -->
                                    EuroCMS.Model.CmsDbContext dbContextForInstantMessaging = new EuroCMS.Model.CmsDbContext();
                                    EuroCMS.Model.InstantMessaging getInstantMessaging = new EuroCMS.Model.InstantMessaging();
                                    Guid currentUserId = (Guid)Membership.GetUser().ProviderUserKey;
                                    var article_id = Convert.ToInt32(Request.QueryString["ArticleId"]);
                                    getInstantMessaging = dbContextForInstantMessaging.InstantMessagings.Where(im => im.From == currentUserId && im.Type == "FA" && im.RelatedId == article_id && im.ReadDate == null).FirstOrDefault();
                                    if (getInstantMessaging == null)
                                    {
                                        <a class="btn icn-only " href="#sendToApprove" data-toggle="modal">Send To Approve</a>
                                    }
                                }
                            }

							<a href="@Url.Action("Edit", "Article", new { id = @article_idm, RevisionId= @Request.QueryString["RevisionId"] })" class="btn icn-only margin-bottom-5" title="Return to Article Revision Details"><i class="icon-share-alt"></i> Return to Article Revision Details</a>

						</td>
					</tr>

				}
				else
				{
					<tr>
						<td colspan="8">No File found. Please insert a new file.</td>
					</tr>
					<tr>
						<td colspan="8">
							<a href="@Url.Action("Edit", "Article", new { id = @Request.QueryString["ArticleId"], RevisionId = @Request.QueryString["RevisionId"] })" class="btn icn-only  margin-bottom-5" title="Return to Article Revision Details"><i class="icon-share-alt"></i> Return to Article Revision Details</a>
						</td>

					</tr>
				}

			}
			else
			{
				<tr>
					<td colspan="8">Please select a Zone Group</td>
				</tr>
			}
		</tbody>
	</table>
</div>
<!-- END SAMPLE TABLE PORTLET-->
<!-- SEND TO APPROVE START  -->
@{
    bool hasPermission = false;

    EuroCMS.Model.BaseDbContext baseContext = new EuroCMS.Model.BaseDbContext();
    EuroCMS.Model.CmsDbContext dbContext = new EuroCMS.Model.CmsDbContext();
    List<EuroCMS.Model.vAspNetMembershipUser> listAllUser = new List<EuroCMS.Model.vAspNetMembershipUser>();
    List<EuroCMS.Model.vAspNetMembershipUser> listHasPermissionUser = new List<EuroCMS.Model.vAspNetMembershipUser>();

    listAllUser = dbContext.vAspNetMembershipUsers.Where(v => v.IsApproved == true && v.IsLockedOut == false).ToList();

    foreach (EuroCMS.Model.vAspNetMembershipUser user in listAllUser)
    {
        hasPermission = false;
        List<string> listUserRole = new List<string>();
        listUserRole = System.Web.Security.Roles.GetRolesForUser(user.UserName).ToList();
        for (int i = 0; i < listUserRole.Count(); i++)
        {
            if (listUserRole[i].ToLower() == "administrator")
            {
                hasPermission = true;
            }
        }

        if (!hasPermission)
        {
            hasPermission = baseContext.HasPermission(String.Join(",", System.Web.Security.Roles.GetRolesForUser(user.UserName)), "approve", Request.QueryString["ArticleId"], "article").Count() > 0;
        }

        if (hasPermission)
        {
            var userProfile = System.Web.Profile.ProfileBase.Create(user.UserName, false);
            string userFullName = userProfile.GetPropertyValue("System.FullName").ToString().Trim();
            user.UserName = userFullName;
            if (!string.IsNullOrEmpty(user.UserName))
            {
                listHasPermissionUser.Add(user);
            }
        }

    }

}


<div id="sendToApprove" class="modal hide" tabindex="-1" data-width="760">
    @using (Html.BeginForm("SendToApprove", "ArticleFile", new { ArticleId = Request.QueryString["ArticleId"], RevisionId = Request["RevisionId"] ?? "-1", FileRevisionId = Request["FileRevisionId"] ?? "-1", UserId = Request["UserId"] ?? "-1", SendToApproveMessage = Request["sendToApproveMessage"] ?? "" }, FormMethod.Post, new { @class = "form", @id = "fromSendToApprove" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h3>Select User:</h3>
        </div>
        <div class="modal-body">
            <div class="row-fluid">
                <div class="control-group">
                    <label class="control-label" for="user">User:</label>
                    <div class="controls">
                        @Html.DropDownList("UserId", new SelectList(listHasPermissionUser, "UserId", "UserName"), new { @class = "user span12 m-wrap" })
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="message">Message:</label>
                    <div class="controls">
                        <textarea class="span12 m-wrap" id="SendToApproveMessage" name="SendToApproveMessage" rows="3"></textarea>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn">Close</button>
            <input type="submit" class="btn blue" value="Save & Close" />
        </div>
    }
</div>

<!-- SEND TO APPROVE END -->