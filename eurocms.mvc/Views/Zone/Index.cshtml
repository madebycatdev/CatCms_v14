@model PagedList.IPagedList<EuroCMS.Model.Zone>
@using PagedList.Mvc;
@*
    <div class="fl">
        <p>
            <a class="btn blue" href="@Url.Action("Create", new { ZoneGroupID = ViewData["ZoneGroupID"] })">Create New Zone <i class="icon-circle-arrow-right"></i></a>
        </p>
    </div>


    <div class="fr">
        <div class="row-fluid">
            @using (Html.BeginForm("Index", "Zone", FormMethod.Get, new { @class = "form-horizontal", @id = "viewZoneGroup" }))
            {
                <div class="control-group">
                    <div class="controls">
                        <label class="control-label" for="ZoneGroupID">Zone Group:</label>&nbsp;
                        @Html.GroupDropList("ZoneGroupID", ViewBag.ZoneGroups as List<GroupDropListItem>, ViewData["ZoneGroupID"].ToString(), new { @class ="large m-wrap margin-left-10"}, "All Zone Groups")
                        <button class="btn" type="submit">Go <i class=" icon-search"></i></button>
                    </div>
                </div>
            }
        </div>
    </div>
*@

<div class="row-fluid">
</div>
<div class="row-fluid">
    @using (Html.BeginForm("Index", "Zone", FormMethod.Get, new { @class = "form-horizontal", @id = "viewZoneGroup" }))
    {
        <div class="control-group">
            <div class="controls-row">
                <div class="span3">
                    <a class="btn blue" href="@Url.Action("Create", new { ZoneGroupID = ViewData["ZoneGroupID"] })">Create New Zone <i class="icon-circle-arrow-right"></i></a>
                </div>

                <label class="control-label span2" for="ZoneGroupID">Zone Group:</label>
                <div class="span5">
                    @Html.GroupDropList("ZoneGroupID", ViewBag.ZoneGroups as List<GroupDropListItem>, "", new { @class = "chosen-select m-wrap margin-bottom-10" }, "")
                </div>
                <button class="btn span2" type="submit">Go <i class="icon-search"></i></button>
            </div>
        </div>
    }
</div>
<!-- BEGIN SAMPLE TABLE PORTLET-->
<div class="row-fluid">
    <div class="span12">
        <div class="portlet box grey">
            <div class="portlet-title">
                <div class="caption"><i class="icon-reorder"></i>Zone List</div>
            </div>
            <div class="portlet-body">
                <div class="no-more-tables">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th></th>
                                <th>Zone Name</th>
                                <th>Alias</th>
                                <th>Created</th>
								<th>Created by</th>
                                <th>Updated</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Count > 0)
                            {
                                int i = 1;

                                foreach (var zone in Model)
                                {
                                    <tr>
                                        <td data-title="#">@zone.Id</td>
                                        <td data-title="">
                                            @if (zone.Status == "A")
                                            {
                                                <i class="icon-ok green"></i>
                                            }
                                            else
                                            {
                                                <i class="icon-stop red"></i>
                                            }
                                        </td>
                                        <td data-title="Zone Name">
                                            <strong>@HttpUtility.HtmlDecode(zone.Name)</strong> <br />
                                            <p class="muted">
                                                Zone Group: @(zone.ZoneGroup != null ? HttpUtility.HtmlDecode(zone.ZoneGroup.Name) : "ZG Deleted") - [@zone.ZoneGroup.Id]<br />
                                                Site: @(zone.ZoneGroup != null ? HttpUtility.HtmlDecode(zone.ZoneGroup.Site.Name) : "ZG Deleted") - [@zone.ZoneGroup.SiteId]
                                            </p>
                                        </td>
                                        <td data-title="Zone Alias">@zone.Alias</td>
                                        <td data-title="Created">@zone.Created.ToString("f")</td>
										<td data-title="Created by">@(zone.CreatedUser != null ? zone.CreatedUser.UserName : "User Deleted")</td>

                                        <td data-title="Updated"> @zone.Updated.ToString("f") </td>
                                        <td data-title="Actions">
                                            <a href="@Url.Action("Edit", new { id= @zone.Id })" class="btn icn-only margin-bottom-5" title="Edit This Layout"><i class="icon-pencil"></i></a>
                                            @using (Html.BeginForm("Delete", "Zone", new { id = @zone.Id }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn icn-only red margin-bottom-5" data-message="Are you sure want to delete this zone?" onclick="return deleteObject(this);"><i class="icon-trash"></i></button>
                                            }
                                            <a href="@Url.Action("Index" , "Article", new { ZoneID = zone.Id })" class="btn icn-only margin-bottom-5" title="List Zone Articles"><i class="icon-list"></i></a>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="8">No Result Found!</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END SAMPLE TABLE PORTLET-->

<strong>Page: </strong> @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    SortOrder = ViewBag.SortOrder,
    ZoneGroupId = ViewData["ZoneGroupID"]
}))
