//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EuroCMS.FrontEnd.com.euromsg.member {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MemberSoap", Namespace="http://ws.euromsg.com/member")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmResult))]
    public partial class Member : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryMemberIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMemberDemographyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeMemberPermissionByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMemberDemographyOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMemberDemographyOperationCompleted;
        
        private System.Threading.SendOrPostCallback QuerySendListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToSendListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToWebListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToAllListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromSendListsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMemberCampaignsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryCampaignsBetweenDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryTransactionalMessagesWithDatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOngoingEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendComplexOngoingEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOngoingRecoEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOngoingSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryMembersWithPermissionUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryLastPermissionUpdateOfAMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushSubscriptionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Member() {
            this.Url = global::EuroCMS.FrontEnd.Properties.Settings.Default.EuroCMS_FrontEnd_com_euromsg_member_Member;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryMemberIDCompletedEventHandler QueryMemberIDCompleted;
        
        /// <remarks/>
        public event InsertMemberDemographyCompletedEventHandler InsertMemberDemographyCompleted;
        
        /// <remarks/>
        public event ChangeMemberPermissionByEmailCompletedEventHandler ChangeMemberPermissionByEmailCompleted;
        
        /// <remarks/>
        public event UpdateMemberDemographyCompletedEventHandler UpdateMemberDemographyCompleted;
        
        /// <remarks/>
        public event QueryMemberDemographyCompletedEventHandler QueryMemberDemographyCompleted;
        
        /// <remarks/>
        public event QuerySendListsCompletedEventHandler QuerySendListsCompleted;
        
        /// <remarks/>
        public event AddToSendListsCompletedEventHandler AddToSendListsCompleted;
        
        /// <remarks/>
        public event AddToWebListsCompletedEventHandler AddToWebListsCompleted;
        
        /// <remarks/>
        public event AddToAllListsCompletedEventHandler AddToAllListsCompleted;
        
        /// <remarks/>
        public event RemoveFromSendListsCompletedEventHandler RemoveFromSendListsCompleted;
        
        /// <remarks/>
        public event QueryMemberCampaignsCompletedEventHandler QueryMemberCampaignsCompleted;
        
        /// <remarks/>
        public event QueryCampaignsBetweenDatesCompletedEventHandler QueryCampaignsBetweenDatesCompleted;
        
        /// <remarks/>
        public event QueryTransactionalMessagesWithDatesCompletedEventHandler QueryTransactionalMessagesWithDatesCompleted;
        
        /// <remarks/>
        public event SendOngoingEMailCompletedEventHandler SendOngoingEMailCompleted;
        
        /// <remarks/>
        public event SendComplexOngoingEMailCompletedEventHandler SendComplexOngoingEMailCompleted;
        
        /// <remarks/>
        public event SendOngoingRecoEmailCompletedEventHandler SendOngoingRecoEmailCompleted;
        
        /// <remarks/>
        public event SendOngoingSmsCompletedEventHandler SendOngoingSmsCompleted;
        
        /// <remarks/>
        public event QueryMembersWithPermissionUpdateCompletedEventHandler QueryMembersWithPermissionUpdateCompleted;
        
        /// <remarks/>
        public event QueryLastPermissionUpdateOfAMemberCompletedEventHandler QueryLastPermissionUpdateOfAMemberCompleted;
        
        /// <remarks/>
        public event PushSubscriptionCompletedEventHandler PushSubscriptionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/QueryMemberID", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult QueryMemberID(string ServiceTicket, string Key, string Value, out string MemberID) {
            object[] results = this.Invoke("QueryMemberID", new object[] {
                        ServiceTicket,
                        Key,
                        Value});
            MemberID = ((string)(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMemberIDAsync(string ServiceTicket, string Key, string Value) {
            this.QueryMemberIDAsync(ServiceTicket, Key, Value, null);
        }
        
        /// <remarks/>
        public void QueryMemberIDAsync(string ServiceTicket, string Key, string Value, object userState) {
            if ((this.QueryMemberIDOperationCompleted == null)) {
                this.QueryMemberIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMemberIDOperationCompleted);
            }
            this.InvokeAsync("QueryMemberID", new object[] {
                        ServiceTicket,
                        Key,
                        Value}, this.QueryMemberIDOperationCompleted, userState);
        }
        
        private void OnQueryMemberIDOperationCompleted(object arg) {
            if ((this.QueryMemberIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMemberIDCompleted(this, new QueryMemberIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/InsertMemberDemography", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult InsertMemberDemography(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate, out string MemberID) {
            object[] results = this.Invoke("InsertMemberDemography", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        ForceUpdate});
            MemberID = ((string)(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMemberDemographyAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate) {
            this.InsertMemberDemographyAsync(ServiceTicket, Key, Value, DemograficData, ForceUpdate, null);
        }
        
        /// <remarks/>
        public void InsertMemberDemographyAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate, object userState) {
            if ((this.InsertMemberDemographyOperationCompleted == null)) {
                this.InsertMemberDemographyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMemberDemographyOperationCompleted);
            }
            this.InvokeAsync("InsertMemberDemography", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        ForceUpdate}, this.InsertMemberDemographyOperationCompleted, userState);
        }
        
        private void OnInsertMemberDemographyOperationCompleted(object arg) {
            if ((this.InsertMemberDemographyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMemberDemographyCompleted(this, new InsertMemberDemographyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/ChangeMemberPermissionByEmail", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult ChangeMemberPermissionByEmail(string ServiceTicket, string EmailValue, string Status, string EmailPermit, string GsmPermit, out string[] MemberID) {
            object[] results = this.Invoke("ChangeMemberPermissionByEmail", new object[] {
                        ServiceTicket,
                        EmailValue,
                        Status,
                        EmailPermit,
                        GsmPermit});
            MemberID = ((string[])(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeMemberPermissionByEmailAsync(string ServiceTicket, string EmailValue, string Status, string EmailPermit, string GsmPermit) {
            this.ChangeMemberPermissionByEmailAsync(ServiceTicket, EmailValue, Status, EmailPermit, GsmPermit, null);
        }
        
        /// <remarks/>
        public void ChangeMemberPermissionByEmailAsync(string ServiceTicket, string EmailValue, string Status, string EmailPermit, string GsmPermit, object userState) {
            if ((this.ChangeMemberPermissionByEmailOperationCompleted == null)) {
                this.ChangeMemberPermissionByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeMemberPermissionByEmailOperationCompleted);
            }
            this.InvokeAsync("ChangeMemberPermissionByEmail", new object[] {
                        ServiceTicket,
                        EmailValue,
                        Status,
                        EmailPermit,
                        GsmPermit}, this.ChangeMemberPermissionByEmailOperationCompleted, userState);
        }
        
        private void OnChangeMemberPermissionByEmailOperationCompleted(object arg) {
            if ((this.ChangeMemberPermissionByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeMemberPermissionByEmailCompleted(this, new ChangeMemberPermissionByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/UpdateMemberDemography", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult UpdateMemberDemography(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceInsert, out string MemberID) {
            object[] results = this.Invoke("UpdateMemberDemography", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        ForceInsert});
            MemberID = ((string)(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMemberDemographyAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceInsert) {
            this.UpdateMemberDemographyAsync(ServiceTicket, Key, Value, DemograficData, ForceInsert, null);
        }
        
        /// <remarks/>
        public void UpdateMemberDemographyAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceInsert, object userState) {
            if ((this.UpdateMemberDemographyOperationCompleted == null)) {
                this.UpdateMemberDemographyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMemberDemographyOperationCompleted);
            }
            this.InvokeAsync("UpdateMemberDemography", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        ForceInsert}, this.UpdateMemberDemographyOperationCompleted, userState);
        }
        
        private void OnUpdateMemberDemographyOperationCompleted(object arg) {
            if ((this.UpdateMemberDemographyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMemberDemographyCompleted(this, new UpdateMemberDemographyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/QueryMemberDemography", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult QueryMemberDemography(string ServiceTicket, string Key, string Value, out EmKeyValue[] DemograficData) {
            object[] results = this.Invoke("QueryMemberDemography", new object[] {
                        ServiceTicket,
                        Key,
                        Value});
            DemograficData = ((EmKeyValue[])(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMemberDemographyAsync(string ServiceTicket, string Key, string Value) {
            this.QueryMemberDemographyAsync(ServiceTicket, Key, Value, null);
        }
        
        /// <remarks/>
        public void QueryMemberDemographyAsync(string ServiceTicket, string Key, string Value, object userState) {
            if ((this.QueryMemberDemographyOperationCompleted == null)) {
                this.QueryMemberDemographyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMemberDemographyOperationCompleted);
            }
            this.InvokeAsync("QueryMemberDemography", new object[] {
                        ServiceTicket,
                        Key,
                        Value}, this.QueryMemberDemographyOperationCompleted, userState);
        }
        
        private void OnQueryMemberDemographyOperationCompleted(object arg) {
            if ((this.QueryMemberDemographyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMemberDemographyCompleted(this, new QueryMemberDemographyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/QuerySendLists", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult QuerySendLists(string ServiceTicket, string Key, string Value, out EmSendList[] Lists) {
            object[] results = this.Invoke("QuerySendLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value});
            Lists = ((EmSendList[])(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void QuerySendListsAsync(string ServiceTicket, string Key, string Value) {
            this.QuerySendListsAsync(ServiceTicket, Key, Value, null);
        }
        
        /// <remarks/>
        public void QuerySendListsAsync(string ServiceTicket, string Key, string Value, object userState) {
            if ((this.QuerySendListsOperationCompleted == null)) {
                this.QuerySendListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerySendListsOperationCompleted);
            }
            this.InvokeAsync("QuerySendLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value}, this.QuerySendListsOperationCompleted, userState);
        }
        
        private void OnQuerySendListsOperationCompleted(object arg) {
            if ((this.QuerySendListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerySendListsCompleted(this, new QuerySendListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/AddToSendLists", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult AddToSendLists(string ServiceTicket, string Key, string Value, EmSendList[] SendLists, bool Move) {
            object[] results = this.Invoke("AddToSendLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        SendLists,
                        Move});
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddToSendListsAsync(string ServiceTicket, string Key, string Value, EmSendList[] SendLists, bool Move) {
            this.AddToSendListsAsync(ServiceTicket, Key, Value, SendLists, Move, null);
        }
        
        /// <remarks/>
        public void AddToSendListsAsync(string ServiceTicket, string Key, string Value, EmSendList[] SendLists, bool Move, object userState) {
            if ((this.AddToSendListsOperationCompleted == null)) {
                this.AddToSendListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToSendListsOperationCompleted);
            }
            this.InvokeAsync("AddToSendLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        SendLists,
                        Move}, this.AddToSendListsOperationCompleted, userState);
        }
        
        private void OnAddToSendListsOperationCompleted(object arg) {
            if ((this.AddToSendListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToSendListsCompleted(this, new AddToSendListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/AddToWebLists", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult AddToWebLists(string ServiceTicket, string Key, string Value) {
            object[] results = this.Invoke("AddToWebLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value});
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddToWebListsAsync(string ServiceTicket, string Key, string Value) {
            this.AddToWebListsAsync(ServiceTicket, Key, Value, null);
        }
        
        /// <remarks/>
        public void AddToWebListsAsync(string ServiceTicket, string Key, string Value, object userState) {
            if ((this.AddToWebListsOperationCompleted == null)) {
                this.AddToWebListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToWebListsOperationCompleted);
            }
            this.InvokeAsync("AddToWebLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value}, this.AddToWebListsOperationCompleted, userState);
        }
        
        private void OnAddToWebListsOperationCompleted(object arg) {
            if ((this.AddToWebListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToWebListsCompleted(this, new AddToWebListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/AddToAllLists", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult AddToAllLists(string ServiceTicket, string Key, string Value) {
            object[] results = this.Invoke("AddToAllLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value});
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void AddToAllListsAsync(string ServiceTicket, string Key, string Value) {
            this.AddToAllListsAsync(ServiceTicket, Key, Value, null);
        }
        
        /// <remarks/>
        public void AddToAllListsAsync(string ServiceTicket, string Key, string Value, object userState) {
            if ((this.AddToAllListsOperationCompleted == null)) {
                this.AddToAllListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToAllListsOperationCompleted);
            }
            this.InvokeAsync("AddToAllLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value}, this.AddToAllListsOperationCompleted, userState);
        }
        
        private void OnAddToAllListsOperationCompleted(object arg) {
            if ((this.AddToAllListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToAllListsCompleted(this, new AddToAllListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/RemoveFromSendLists", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult RemoveFromSendLists(string ServiceTicket, string Key, string Value, EmSendList[] SendLists, bool DeleteIfInNoList) {
            object[] results = this.Invoke("RemoveFromSendLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        SendLists,
                        DeleteIfInNoList});
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveFromSendListsAsync(string ServiceTicket, string Key, string Value, EmSendList[] SendLists, bool DeleteIfInNoList) {
            this.RemoveFromSendListsAsync(ServiceTicket, Key, Value, SendLists, DeleteIfInNoList, null);
        }
        
        /// <remarks/>
        public void RemoveFromSendListsAsync(string ServiceTicket, string Key, string Value, EmSendList[] SendLists, bool DeleteIfInNoList, object userState) {
            if ((this.RemoveFromSendListsOperationCompleted == null)) {
                this.RemoveFromSendListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromSendListsOperationCompleted);
            }
            this.InvokeAsync("RemoveFromSendLists", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        SendLists,
                        DeleteIfInNoList}, this.RemoveFromSendListsOperationCompleted, userState);
        }
        
        private void OnRemoveFromSendListsOperationCompleted(object arg) {
            if ((this.RemoveFromSendListsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromSendListsCompleted(this, new RemoveFromSendListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/QueryMemberCampaigns", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmCampaignFuncRes QueryMemberCampaigns(string ServiceTicket, string Key, string Value, string[] CampaignIds, out CampaignSummary[] CampaignList) {
            object[] results = this.Invoke("QueryMemberCampaigns", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        CampaignIds});
            CampaignList = ((CampaignSummary[])(results[1]));
            return ((EmCampaignFuncRes)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMemberCampaignsAsync(string ServiceTicket, string Key, string Value, string[] CampaignIds) {
            this.QueryMemberCampaignsAsync(ServiceTicket, Key, Value, CampaignIds, null);
        }
        
        /// <remarks/>
        public void QueryMemberCampaignsAsync(string ServiceTicket, string Key, string Value, string[] CampaignIds, object userState) {
            if ((this.QueryMemberCampaignsOperationCompleted == null)) {
                this.QueryMemberCampaignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMemberCampaignsOperationCompleted);
            }
            this.InvokeAsync("QueryMemberCampaigns", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        CampaignIds}, this.QueryMemberCampaignsOperationCompleted, userState);
        }
        
        private void OnQueryMemberCampaignsOperationCompleted(object arg) {
            if ((this.QueryMemberCampaignsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMemberCampaignsCompleted(this, new QueryMemberCampaignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/QueryCampaignsBetweenDates", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult QueryCampaignsBetweenDates(string ServiceTicket, string Key, string Value, string BeginDate, string EndDate, out EmCampaignResult[] CampaignResults) {
            object[] results = this.Invoke("QueryCampaignsBetweenDates", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        BeginDate,
                        EndDate});
            CampaignResults = ((EmCampaignResult[])(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryCampaignsBetweenDatesAsync(string ServiceTicket, string Key, string Value, string BeginDate, string EndDate) {
            this.QueryCampaignsBetweenDatesAsync(ServiceTicket, Key, Value, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void QueryCampaignsBetweenDatesAsync(string ServiceTicket, string Key, string Value, string BeginDate, string EndDate, object userState) {
            if ((this.QueryCampaignsBetweenDatesOperationCompleted == null)) {
                this.QueryCampaignsBetweenDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryCampaignsBetweenDatesOperationCompleted);
            }
            this.InvokeAsync("QueryCampaignsBetweenDates", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        BeginDate,
                        EndDate}, this.QueryCampaignsBetweenDatesOperationCompleted, userState);
        }
        
        private void OnQueryCampaignsBetweenDatesOperationCompleted(object arg) {
            if ((this.QueryCampaignsBetweenDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCampaignsBetweenDatesCompleted(this, new QueryCampaignsBetweenDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/QueryTransactionalMessagesWithDates", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult QueryTransactionalMessagesWithDates(string ServiceTicket, string KeyId, string EmailAddress, string PhoneNumber, string BeginDate, string EndDate, out EmTransactionalMessageResult[] MessageResults) {
            object[] results = this.Invoke("QueryTransactionalMessagesWithDates", new object[] {
                        ServiceTicket,
                        KeyId,
                        EmailAddress,
                        PhoneNumber,
                        BeginDate,
                        EndDate});
            MessageResults = ((EmTransactionalMessageResult[])(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryTransactionalMessagesWithDatesAsync(string ServiceTicket, string KeyId, string EmailAddress, string PhoneNumber, string BeginDate, string EndDate) {
            this.QueryTransactionalMessagesWithDatesAsync(ServiceTicket, KeyId, EmailAddress, PhoneNumber, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void QueryTransactionalMessagesWithDatesAsync(string ServiceTicket, string KeyId, string EmailAddress, string PhoneNumber, string BeginDate, string EndDate, object userState) {
            if ((this.QueryTransactionalMessagesWithDatesOperationCompleted == null)) {
                this.QueryTransactionalMessagesWithDatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryTransactionalMessagesWithDatesOperationCompleted);
            }
            this.InvokeAsync("QueryTransactionalMessagesWithDates", new object[] {
                        ServiceTicket,
                        KeyId,
                        EmailAddress,
                        PhoneNumber,
                        BeginDate,
                        EndDate}, this.QueryTransactionalMessagesWithDatesOperationCompleted, userState);
        }
        
        private void OnQueryTransactionalMessagesWithDatesOperationCompleted(object arg) {
            if ((this.QueryTransactionalMessagesWithDatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryTransactionalMessagesWithDatesCompleted(this, new QueryTransactionalMessagesWithDatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/SendOngoingEMail", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult SendOngoingEMail(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate, string OngoingCampaignId, out string MemberID, out string TransactionID) {
            object[] results = this.Invoke("SendOngoingEMail", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        ForceUpdate,
                        OngoingCampaignId});
            MemberID = ((string)(results[1]));
            TransactionID = ((string)(results[2]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendOngoingEMailAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate, string OngoingCampaignId) {
            this.SendOngoingEMailAsync(ServiceTicket, Key, Value, DemograficData, ForceUpdate, OngoingCampaignId, null);
        }
        
        /// <remarks/>
        public void SendOngoingEMailAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate, string OngoingCampaignId, object userState) {
            if ((this.SendOngoingEMailOperationCompleted == null)) {
                this.SendOngoingEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOngoingEMailOperationCompleted);
            }
            this.InvokeAsync("SendOngoingEMail", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        ForceUpdate,
                        OngoingCampaignId}, this.SendOngoingEMailOperationCompleted, userState);
        }
        
        private void OnSendOngoingEMailOperationCompleted(object arg) {
            if ((this.SendOngoingEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOngoingEMailCompleted(this, new SendOngoingEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/SendComplexOngoingEMail", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult SendComplexOngoingEMail(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate, string OngoingCampaignId, string XmlData, out string MemberID, out string TransactionID) {
            object[] results = this.Invoke("SendComplexOngoingEMail", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        ForceUpdate,
                        OngoingCampaignId,
                        XmlData});
            MemberID = ((string)(results[1]));
            TransactionID = ((string)(results[2]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendComplexOngoingEMailAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate, string OngoingCampaignId, string XmlData) {
            this.SendComplexOngoingEMailAsync(ServiceTicket, Key, Value, DemograficData, ForceUpdate, OngoingCampaignId, XmlData, null);
        }
        
        /// <remarks/>
        public void SendComplexOngoingEMailAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool ForceUpdate, string OngoingCampaignId, string XmlData, object userState) {
            if ((this.SendComplexOngoingEMailOperationCompleted == null)) {
                this.SendComplexOngoingEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendComplexOngoingEMailOperationCompleted);
            }
            this.InvokeAsync("SendComplexOngoingEMail", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        ForceUpdate,
                        OngoingCampaignId,
                        XmlData}, this.SendComplexOngoingEMailOperationCompleted, userState);
        }
        
        private void OnSendComplexOngoingEMailOperationCompleted(object arg) {
            if ((this.SendComplexOngoingEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendComplexOngoingEMailCompleted(this, new SendComplexOngoingEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/SendOngoingRecoEmail", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmSendOngoingRecoEmailResult SendOngoingRecoEmail(EmSendOngoingRecoEmailRequest request) {
            object[] results = this.Invoke("SendOngoingRecoEmail", new object[] {
                        request});
            return ((EmSendOngoingRecoEmailResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendOngoingRecoEmailAsync(EmSendOngoingRecoEmailRequest request) {
            this.SendOngoingRecoEmailAsync(request, null);
        }
        
        /// <remarks/>
        public void SendOngoingRecoEmailAsync(EmSendOngoingRecoEmailRequest request, object userState) {
            if ((this.SendOngoingRecoEmailOperationCompleted == null)) {
                this.SendOngoingRecoEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOngoingRecoEmailOperationCompleted);
            }
            this.InvokeAsync("SendOngoingRecoEmail", new object[] {
                        request}, this.SendOngoingRecoEmailOperationCompleted, userState);
        }
        
        private void OnSendOngoingRecoEmailOperationCompleted(object arg) {
            if ((this.SendOngoingRecoEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOngoingRecoEmailCompleted(this, new SendOngoingRecoEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/SendOngoingSms", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult SendOngoingSms(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool InsertMember, bool ForceUpdate, string OngoingCampaignId, string GsmNo, out string MemberID, out string TransactionID) {
            object[] results = this.Invoke("SendOngoingSms", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        InsertMember,
                        ForceUpdate,
                        OngoingCampaignId,
                        GsmNo});
            MemberID = ((string)(results[1]));
            TransactionID = ((string)(results[2]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void SendOngoingSmsAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool InsertMember, bool ForceUpdate, string OngoingCampaignId, string GsmNo) {
            this.SendOngoingSmsAsync(ServiceTicket, Key, Value, DemograficData, InsertMember, ForceUpdate, OngoingCampaignId, GsmNo, null);
        }
        
        /// <remarks/>
        public void SendOngoingSmsAsync(string ServiceTicket, string Key, string Value, EmKeyValue[] DemograficData, bool InsertMember, bool ForceUpdate, string OngoingCampaignId, string GsmNo, object userState) {
            if ((this.SendOngoingSmsOperationCompleted == null)) {
                this.SendOngoingSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOngoingSmsOperationCompleted);
            }
            this.InvokeAsync("SendOngoingSms", new object[] {
                        ServiceTicket,
                        Key,
                        Value,
                        DemograficData,
                        InsertMember,
                        ForceUpdate,
                        OngoingCampaignId,
                        GsmNo}, this.SendOngoingSmsOperationCompleted, userState);
        }
        
        private void OnSendOngoingSmsOperationCompleted(object arg) {
            if ((this.SendOngoingSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOngoingSmsCompleted(this, new SendOngoingSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/QueryMembersWithPermissionUpdate", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult QueryMembersWithPermissionUpdate(string ServiceTicket, string BeginDate, string EndDate, out EmMemberPermissionLog[] Members) {
            object[] results = this.Invoke("QueryMembersWithPermissionUpdate", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate});
            Members = ((EmMemberPermissionLog[])(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryMembersWithPermissionUpdateAsync(string ServiceTicket, string BeginDate, string EndDate) {
            this.QueryMembersWithPermissionUpdateAsync(ServiceTicket, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void QueryMembersWithPermissionUpdateAsync(string ServiceTicket, string BeginDate, string EndDate, object userState) {
            if ((this.QueryMembersWithPermissionUpdateOperationCompleted == null)) {
                this.QueryMembersWithPermissionUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryMembersWithPermissionUpdateOperationCompleted);
            }
            this.InvokeAsync("QueryMembersWithPermissionUpdate", new object[] {
                        ServiceTicket,
                        BeginDate,
                        EndDate}, this.QueryMembersWithPermissionUpdateOperationCompleted, userState);
        }
        
        private void OnQueryMembersWithPermissionUpdateOperationCompleted(object arg) {
            if ((this.QueryMembersWithPermissionUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryMembersWithPermissionUpdateCompleted(this, new QueryMembersWithPermissionUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/QueryLastPermissionUpdateOfAMember", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult QueryLastPermissionUpdateOfAMember(string ServiceTicket, string Key, string Value, out EmMemberPermissionLog MemberPermissionDetail) {
            object[] results = this.Invoke("QueryLastPermissionUpdateOfAMember", new object[] {
                        ServiceTicket,
                        Key,
                        Value});
            MemberPermissionDetail = ((EmMemberPermissionLog)(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void QueryLastPermissionUpdateOfAMemberAsync(string ServiceTicket, string Key, string Value) {
            this.QueryLastPermissionUpdateOfAMemberAsync(ServiceTicket, Key, Value, null);
        }
        
        /// <remarks/>
        public void QueryLastPermissionUpdateOfAMemberAsync(string ServiceTicket, string Key, string Value, object userState) {
            if ((this.QueryLastPermissionUpdateOfAMemberOperationCompleted == null)) {
                this.QueryLastPermissionUpdateOfAMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryLastPermissionUpdateOfAMemberOperationCompleted);
            }
            this.InvokeAsync("QueryLastPermissionUpdateOfAMember", new object[] {
                        ServiceTicket,
                        Key,
                        Value}, this.QueryLastPermissionUpdateOfAMemberOperationCompleted, userState);
        }
        
        private void OnQueryLastPermissionUpdateOfAMemberOperationCompleted(object arg) {
            if ((this.QueryLastPermissionUpdateOfAMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryLastPermissionUpdateOfAMemberCompleted(this, new QueryLastPermissionUpdateOfAMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.euromsg.com/member/PushSubscription", RequestNamespace="http://ws.euromsg.com/member", ResponseNamespace="http://ws.euromsg.com/member", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EmMemberResult PushSubscription(string ServiceTicket, string PushToken, string MemberID, string AppAlias, string Status, bool ForceUpdate, out bool Success) {
            object[] results = this.Invoke("PushSubscription", new object[] {
                        ServiceTicket,
                        PushToken,
                        MemberID,
                        AppAlias,
                        Status,
                        ForceUpdate});
            Success = ((bool)(results[1]));
            return ((EmMemberResult)(results[0]));
        }
        
        /// <remarks/>
        public void PushSubscriptionAsync(string ServiceTicket, string PushToken, string MemberID, string AppAlias, string Status, bool ForceUpdate) {
            this.PushSubscriptionAsync(ServiceTicket, PushToken, MemberID, AppAlias, Status, ForceUpdate, null);
        }
        
        /// <remarks/>
        public void PushSubscriptionAsync(string ServiceTicket, string PushToken, string MemberID, string AppAlias, string Status, bool ForceUpdate, object userState) {
            if ((this.PushSubscriptionOperationCompleted == null)) {
                this.PushSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushSubscriptionOperationCompleted);
            }
            this.InvokeAsync("PushSubscription", new object[] {
                        ServiceTicket,
                        PushToken,
                        MemberID,
                        AppAlias,
                        Status,
                        ForceUpdate}, this.PushSubscriptionOperationCompleted, userState);
        }
        
        private void OnPushSubscriptionOperationCompleted(object arg) {
            if ((this.PushSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushSubscriptionCompleted(this, new PushSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmMemberResult : EmResult {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmSendOngoingRecoEmailResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmCampaignFuncRes))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EmMemberResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmResult {
        
        private string codeField;
        
        private string messageField;
        
        private string detailedMessageField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string DetailedMessage {
            get {
                return this.detailedMessageField;
            }
            set {
                this.detailedMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmMemberPermissionLog {
        
        private string keyColumnValueField;
        
        private string emailField;
        
        private string gsmNoField;
        
        private string oldStatusField;
        
        private string newStatusField;
        
        private string oldEmailPermitField;
        
        private string newEmailPermitField;
        
        private string oldGsmPermitField;
        
        private string newGsmPermitField;
        
        private System.DateTime permissionUpdateTimeField;
        
        private string updateSourceField;
        
        private System.DateTime statusPermissionUpdateTimeField;
        
        private string statusUpdateSourceField;
        
        private System.DateTime emailPermitUpdateTimeField;
        
        private string emailPermitUpdateSourceField;
        
        private System.DateTime gsmPermitUpdateTimeField;
        
        private string gsmPermitUpdateSourceField;
        
        /// <remarks/>
        public string KeyColumnValue {
            get {
                return this.keyColumnValueField;
            }
            set {
                this.keyColumnValueField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string GsmNo {
            get {
                return this.gsmNoField;
            }
            set {
                this.gsmNoField = value;
            }
        }
        
        /// <remarks/>
        public string OldStatus {
            get {
                return this.oldStatusField;
            }
            set {
                this.oldStatusField = value;
            }
        }
        
        /// <remarks/>
        public string NewStatus {
            get {
                return this.newStatusField;
            }
            set {
                this.newStatusField = value;
            }
        }
        
        /// <remarks/>
        public string OldEmailPermit {
            get {
                return this.oldEmailPermitField;
            }
            set {
                this.oldEmailPermitField = value;
            }
        }
        
        /// <remarks/>
        public string NewEmailPermit {
            get {
                return this.newEmailPermitField;
            }
            set {
                this.newEmailPermitField = value;
            }
        }
        
        /// <remarks/>
        public string OldGsmPermit {
            get {
                return this.oldGsmPermitField;
            }
            set {
                this.oldGsmPermitField = value;
            }
        }
        
        /// <remarks/>
        public string NewGsmPermit {
            get {
                return this.newGsmPermitField;
            }
            set {
                this.newGsmPermitField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PermissionUpdateTime {
            get {
                return this.permissionUpdateTimeField;
            }
            set {
                this.permissionUpdateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateSource {
            get {
                return this.updateSourceField;
            }
            set {
                this.updateSourceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StatusPermissionUpdateTime {
            get {
                return this.statusPermissionUpdateTimeField;
            }
            set {
                this.statusPermissionUpdateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string StatusUpdateSource {
            get {
                return this.statusUpdateSourceField;
            }
            set {
                this.statusUpdateSourceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EmailPermitUpdateTime {
            get {
                return this.emailPermitUpdateTimeField;
            }
            set {
                this.emailPermitUpdateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EmailPermitUpdateSource {
            get {
                return this.emailPermitUpdateSourceField;
            }
            set {
                this.emailPermitUpdateSourceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime GsmPermitUpdateTime {
            get {
                return this.gsmPermitUpdateTimeField;
            }
            set {
                this.gsmPermitUpdateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string GsmPermitUpdateSource {
            get {
                return this.gsmPermitUpdateSourceField;
            }
            set {
                this.gsmPermitUpdateSourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class BoxProductModel {
        
        private string boxNameField;
        
        private string[] productIdsField;
        
        /// <remarks/>
        public string BoxName {
            get {
                return this.boxNameField;
            }
            set {
                this.boxNameField = value;
            }
        }
        
        /// <remarks/>
        public string[] ProductIds {
            get {
                return this.productIdsField;
            }
            set {
                this.productIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmSendOngoingRecoEmailRequest {
        
        private string serviceTicketField;
        
        private string keyField;
        
        private string valueField;
        
        private string campaignIdField;
        
        private string subjectField;
        
        private EmKeyValue[] demograficDataField;
        
        private BoxProductModel[] boxProductsField;
        
        private EmKeyValue[] customParamsField;
        
        /// <remarks/>
        public string ServiceTicket {
            get {
                return this.serviceTicketField;
            }
            set {
                this.serviceTicketField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string CampaignId {
            get {
                return this.campaignIdField;
            }
            set {
                this.campaignIdField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public EmKeyValue[] DemograficData {
            get {
                return this.demograficDataField;
            }
            set {
                this.demograficDataField = value;
            }
        }
        
        /// <remarks/>
        public BoxProductModel[] BoxProducts {
            get {
                return this.boxProductsField;
            }
            set {
                this.boxProductsField = value;
            }
        }
        
        /// <remarks/>
        public EmKeyValue[] CustomParams {
            get {
                return this.customParamsField;
            }
            set {
                this.customParamsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmKeyValue {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmTransactionalMessageResult {
        
        private string channelAddressField;
        
        private string subjectField;
        
        private string sentTimeField;
        
        private string deliveryStatusField;
        
        private string channelTypeField;
        
        /// <remarks/>
        public string ChannelAddress {
            get {
                return this.channelAddressField;
            }
            set {
                this.channelAddressField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string SentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStatus {
            get {
                return this.deliveryStatusField;
            }
            set {
                this.deliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelType {
            get {
                return this.channelTypeField;
            }
            set {
                this.channelTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmCampaignResult {
        
        private string campaignIdField;
        
        private string campaignNameField;
        
        private string deliveryStatusField;
        
        private string deliveryDateField;
        
        private string channelAddressField;
        
        private string channelTypeField;
        
        private string sentTimeField;
        
        private string subjectField;
        
        private string campaignMessageField;
        
        /// <remarks/>
        public string CampaignId {
            get {
                return this.campaignIdField;
            }
            set {
                this.campaignIdField = value;
            }
        }
        
        /// <remarks/>
        public string CampaignName {
            get {
                return this.campaignNameField;
            }
            set {
                this.campaignNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStatus {
            get {
                return this.deliveryStatusField;
            }
            set {
                this.deliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryDate {
            get {
                return this.deliveryDateField;
            }
            set {
                this.deliveryDateField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelAddress {
            get {
                return this.channelAddressField;
            }
            set {
                this.channelAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ChannelType {
            get {
                return this.channelTypeField;
            }
            set {
                this.channelTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string CampaignMessage {
            get {
                return this.campaignMessageField;
            }
            set {
                this.campaignMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class CampaignSummary {
        
        private string idField;
        
        private string nameField;
        
        private string subjectField;
        
        private string deliveryDateField;
        
        private string readTimeField;
        
        private string deliveryStatusField;
        
        private string clickStatusField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryDate {
            get {
                return this.deliveryDateField;
            }
            set {
                this.deliveryDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReadTime {
            get {
                return this.readTimeField;
            }
            set {
                this.readTimeField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStatus {
            get {
                return this.deliveryStatusField;
            }
            set {
                this.deliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ClickStatus {
            get {
                return this.clickStatusField;
            }
            set {
                this.clickStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmSendList {
        
        private string listNameField;
        
        private string groupNameField;
        
        /// <remarks/>
        public string ListName {
            get {
                return this.listNameField;
            }
            set {
                this.listNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmSendOngoingRecoEmailResult : EmResult {
        
        private string memberIdField;
        
        private string transactionIdField;
        
        /// <remarks/>
        public string MemberId {
            get {
                return this.memberIdField;
            }
            set {
                this.memberIdField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.euromsg.com/member")]
    public partial class EmCampaignFuncRes : EmResult {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryMemberIDCompletedEventHandler(object sender, QueryMemberIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMemberIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMemberIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MemberID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void InsertMemberDemographyCompletedEventHandler(object sender, InsertMemberDemographyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMemberDemographyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMemberDemographyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MemberID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ChangeMemberPermissionByEmailCompletedEventHandler(object sender, ChangeMemberPermissionByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeMemberPermissionByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeMemberPermissionByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] MemberID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateMemberDemographyCompletedEventHandler(object sender, UpdateMemberDemographyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMemberDemographyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMemberDemographyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MemberID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryMemberDemographyCompletedEventHandler(object sender, QueryMemberDemographyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMemberDemographyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMemberDemographyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmKeyValue[] DemograficData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmKeyValue[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QuerySendListsCompletedEventHandler(object sender, QuerySendListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerySendListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QuerySendListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmSendList[] Lists {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSendList[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddToSendListsCompletedEventHandler(object sender, AddToSendListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToSendListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToSendListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddToWebListsCompletedEventHandler(object sender, AddToWebListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToWebListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToWebListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddToAllListsCompletedEventHandler(object sender, AddToAllListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToAllListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToAllListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void RemoveFromSendListsCompletedEventHandler(object sender, RemoveFromSendListsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveFromSendListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveFromSendListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryMemberCampaignsCompletedEventHandler(object sender, QueryMemberCampaignsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMemberCampaignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMemberCampaignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmCampaignFuncRes Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmCampaignFuncRes)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CampaignSummary[] CampaignList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CampaignSummary[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryCampaignsBetweenDatesCompletedEventHandler(object sender, QueryCampaignsBetweenDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCampaignsBetweenDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCampaignsBetweenDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmCampaignResult[] CampaignResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmCampaignResult[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryTransactionalMessagesWithDatesCompletedEventHandler(object sender, QueryTransactionalMessagesWithDatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryTransactionalMessagesWithDatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryTransactionalMessagesWithDatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmTransactionalMessageResult[] MessageResults {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmTransactionalMessageResult[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SendOngoingEMailCompletedEventHandler(object sender, SendOngoingEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOngoingEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOngoingEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MemberID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string TransactionID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SendComplexOngoingEMailCompletedEventHandler(object sender, SendComplexOngoingEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendComplexOngoingEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendComplexOngoingEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MemberID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string TransactionID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SendOngoingRecoEmailCompletedEventHandler(object sender, SendOngoingRecoEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOngoingRecoEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOngoingRecoEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmSendOngoingRecoEmailResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmSendOngoingRecoEmailResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SendOngoingSmsCompletedEventHandler(object sender, SendOngoingSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOngoingSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOngoingSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string MemberID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string TransactionID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryMembersWithPermissionUpdateCompletedEventHandler(object sender, QueryMembersWithPermissionUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryMembersWithPermissionUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryMembersWithPermissionUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmMemberPermissionLog[] Members {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberPermissionLog[])(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryLastPermissionUpdateOfAMemberCompletedEventHandler(object sender, QueryLastPermissionUpdateOfAMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryLastPermissionUpdateOfAMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryLastPermissionUpdateOfAMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public EmMemberPermissionLog MemberPermissionDetail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberPermissionLog)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PushSubscriptionCompletedEventHandler(object sender, PushSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EmMemberResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EmMemberResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool Success {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591